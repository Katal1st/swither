const App = {
    data() {
        return {
            activeIndex: 0,
            isActive: true,
            steps: [
                {title: 'Основы', text: 'В блоке вы познакомитесь со всеми основами Vue.js на практике. На протяжении блока мы напишем реактивное приложение, в процессе разработки которого разберем вся базу фреймворка.'},
                {title: 'Компоненты', text: 'Один из самых важных блоков в курсе, где вы узнаете все о компонентах. В блоке мы напишем 2 разных приложения и создадим более 5 различных UI компонентов как в реальной разработке. Блок расскажет про абсолютно все составляющие, которые есть в компонентах: взаимодействие, slots, асинхронные и динамические компоненты и тонна примеров.'},
                {title: 'Роутер', text: 'В данном блоке вы узнаете все о том, как работает мультиязычность во Vue. Мы создадим миниклон Gmail в данном блоке, где вы на практике увидите как работать с динамическим роутером.'},
                {title: 'Vuex', text: 'В блоке вы узнаете абсолютно все про Vuex. Вы узнаете как работать с данными, какие есть лучшие практики по их программированию и структурированию. Все на практике.'},
                {title: 'Composition', text: 'Одним из наиболее важных обновлений в Vue 3 является появление альтернативного синтаксиса Composition API. В этом блоке вы узнаете все, чтобы полностью пользоваться данными синтаксисом на практических примерах. Помимо этого вы узнаете как работать совместно с Vue Router и Vuex.'},
                {title: 'v-for', text:'Используйте директиву v-for для отрисовки списка элементов на основе массива данных. У директивы v-for особый синтаксис записи: item in items, где items — исходный массив, а item — ссылка на текущий элемент массива.'},
                {title: 'v-model', text:'В 3.x v-model для пользовательского компонента это эквивалент передачи modelValue свойства и генерации update:modelValue события.'},
                {title: 'v-bind', text:'Это директива с помощью которой можно связать атрибуты тега с выражением, или же входной параметр компонента, если эту директиву используют с атрибутами style и class то можно использовать массив в качестве передачи большого количества разных значений, так же вроде можно использовать объекты'},
                {title: 'v-if', text:'Директива v-if используется для рендеринга блока по условию. Блок будет отображаться только в том случае, если выражение директивы возвращает значение, приводимое к true.'},
                {title: 'v-else', text:'Для указания блока «иначе» для v-if можно использовать директиву v-else. Элемент с директивой v-else должен следовать сразу за элементом с директивой v-if или v-else-if, иначе он не будет распознан.'},
            ]
        }
    },
    methods: {
        prev() {
            if (this.activeIndex !== 0) {
                this.activeIndex--
            }
        },
        reset() {
            this.activeIndex = 0
            this.isActive = true
        },
        nextOfFinish() {
            if (this.activeIndex !== this.steps.length - 1) {
                this.activeIndex++
            } else {
                this.isActive = false
            }
        },
        setActive(idx) {
            this.activeIndex = idx
        }
    },
    computed: {
        activeStep() {
            return this.steps[this.activeIndex]
        },
        prevDisabled() {
            return this.activeIndex === 0
        },
        isLastStep() {
            return this.activeIndex === this.steps.length - 1
        }
    }
}

Vue.createApp(App).mount('#app')